{"ast":null,"code":"/*\nimport { useEffect } from \"react\";\n\nimport { useState } from \"react\";\n\nimport axios from 'axios';\nimport { response } from \"express\";\n\nexport default function AxiosFetch({ name }) {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n          axios.get(\"http://localhost:8080/api/census?name=\"+name)\n           .then(response => {\n               setData(response.data)\n               setIsLoaded(true);\n           })\n           .catch(error =>{\n               setIsLoaded(true);\n               setError(error);\n           })\n\n    }, [name]) // the array is to tell useEffect function of any dependencies.\n    // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n    return (\n        <div>\n\n        </div>\n    );\n}*/","map":{"version":3,"sources":["A:/WebstormProjects/MERN/reactapp/src/components/AxiosFetch.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\nimport { useEffect } from \"react\";\n\nimport { useState } from \"react\";\n\nimport axios from 'axios';\nimport { response } from \"express\";\n\nexport default function AxiosFetch({ name }) {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n          axios.get(\"http://localhost:8080/api/census?name=\"+name)\n           .then(response => {\n               setData(response.data)\n               setIsLoaded(true);\n           })\n           .catch(error =>{\n               setIsLoaded(true);\n               setError(error);\n           })\n\n    }, [name]) // the array is to tell useEffect function of any dependencies.\n    // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n    return (\n        <div>\n\n        </div>\n    );\n}*/\n"]},"metadata":{},"sourceType":"module"}