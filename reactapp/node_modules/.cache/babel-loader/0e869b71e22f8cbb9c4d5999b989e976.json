{"ast":null,"code":"var _jsxFileName = \"A:\\\\WebstormProjects\\\\MERN\\\\reactapp\\\\src\\\\components\\\\AxiosFetch.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { response } from \"express\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AxiosFetch(_ref) {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/census?name=\" + name).then(response => {\n      setData(response.data);\n      setIsLoaded(true);\n    }).catch(error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [name]); // the array is to tell useEffect function of any dependencies.\n  // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: data.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [s.city.replace('city', ','), \": population \", s.census]\n      }, s.city, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AxiosFetch, \"UWnc+J+naCuBYyzlp9x6SiAcJhY=\");\n\n_c = AxiosFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxiosFetch\");","map":{"version":3,"sources":["A:/WebstormProjects/MERN/reactapp/src/components/AxiosFetch.js"],"names":["useEffect","useState","axios","response","AxiosFetch","name","data","setData","isLoaded","setIsLoaded","error","setError","get","then","catch","message","map","s","city","replace","census"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,eAAe,SAASC,UAAT,OAA8B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACVE,IAAAA,KAAK,CAACU,GAAN,CAAU,2CAAyCP,IAAnD,EACEQ,IADF,CACOV,QAAQ,IAAI;AACdI,MAAAA,OAAO,CAACJ,QAAQ,CAACG,IAAV,CAAP;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJF,EAKEK,KALF,CAKQJ,KAAK,IAAG;AACXD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KARF;AAUL,GAXQ,EAWN,CAACL,IAAD,CAXM,CAAT,CALyC,CAgB9B;AACX;;AAEA,sBACI;AAAA,eACKK,KAAK,iBACF;AAAA,4BAAaA,KAAK,CAACK,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAGK,CAACP,QAAD,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAEG;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAEKF,IAAI,CAACU,GAAL,CAAUC,CAAD,iBAAS;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBAA8CA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAe,MAAf,EAAuB,GAAvB,CAA9C,mBAAwFF,CAAC,CAACG,MAA1F;AAAA,SAAqCH,CAAC,CAACC,IAAvC;AAAA;AAAA;AAAA;AAAA,cAAlB;AAFL;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAlCuBd,U;;KAAAA,U","sourcesContent":["import { useEffect } from \"react\";\n\nimport { useState } from \"react\";\n\nimport axios from 'axios';\nimport { response } from \"express\";\n\nexport default function AxiosFetch({ name }) {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n          axios.get(\"http://localhost:8080/api/census?name=\"+name)\n           .then(response => {\n               setData(response.data)\n               setIsLoaded(true);\n           })\n           .catch(error =>{\n               setIsLoaded(true);\n               setError(error);\n           })\n\n    }, [name]) // the array is to tell useEffect function of any dependencies.\n    // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n    return (\n        <div>\n            {error &&\n                <div>Error: {error.message}</div>}\n            {!isLoaded ?\n                <div>Loading...</div> :\n                <ul className=\"list-group\">\n\n                    {data.map((s) => ((<li className=\"list-group-item\" key={s.city}>{s.city.replace('city', ',')}: population {s.census}</li>)))}\n                </ul>}\n\n\n\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}