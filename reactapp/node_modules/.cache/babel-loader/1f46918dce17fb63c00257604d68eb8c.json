{"ast":null,"code":"var _jsxFileName = \"A:\\\\WebstormProjects\\\\MERN\\\\reactapp\\\\src\\\\components\\\\SauceFetch.js\",\n    _s = $RefreshSig$();\n\nimport { create } from 'apisauce';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SauceFetch(_ref) {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    //baseURL is the api URL by itself\n    const api = create({\n      baseURL: \"http://localhost:8080/api\"\n    });\n    api.get(\"/census?name=\" + name).then(response => response.data).then(data => {\n      setIsLoaded(true);\n      setData(data);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [name]); // the array is to tell useEffect function of any dependencies.\n  // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: data.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [s.city.replace('city', ','), \": population \", s.census]\n      }, s.city, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SauceFetch, \"UWnc+J+naCuBYyzlp9x6SiAcJhY=\");\n\n_c = SauceFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"SauceFetch\");","map":{"version":3,"sources":["A:/WebstormProjects/MERN/reactapp/src/components/SauceFetch.js"],"names":["create","useEffect","useState","SauceFetch","name","data","setData","isLoaded","setIsLoaded","error","setError","api","baseURL","get","then","response","message","map","s","city","replace","census"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,UAAT,OAA8B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMU,GAAG,GAAGX,MAAM,CAAC;AACfY,MAAAA,OAAO,EAAC;AADO,KAAD,CAAlB;AAIAD,IAAAA,GAAG,CAACE,GAAJ,CAAQ,kBAAiBT,IAAzB,EACKU,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACV,IADjC,EAEKS,IAFL,CAEWT,IAAD,IAAU;AACZG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KALL,EAMKI,KAAD,IAAW;AACPD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KATL;AAcH,GApBQ,EAoBN,CAACL,IAAD,CApBM,CAAT,CANyC,CA0B9B;AACX;;AAEA,sBACI;AAAA,eACKK,KAAK,iBACF;AAAA,4BAAaA,KAAK,CAACO,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAGK,CAACT,QAAD,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAEG;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAEKF,IAAI,CAACY,GAAL,CAAUC,CAAD,iBAAS;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBAA8CA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAe,MAAf,EAAuB,GAAvB,CAA9C,mBAAwFF,CAAC,CAACG,MAA1F;AAAA,SAAqCH,CAAC,CAACC,IAAvC;AAAA;AAAA;AAAA;AAAA,cAAlB;AAFL;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA5CuBhB,U;;KAAAA,U","sourcesContent":["import { create } from 'apisauce'\n\nimport { useEffect } from \"react\";\n\nimport { useState } from \"react\";\n\nexport default function SauceFetch({ name }) {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(false);\n    \n    \n    useEffect(() => {\n        //baseURL is the api URL by itself\n        const api = create({\n            baseURL:\"http://localhost:8080/api\"\n\n        });\n        api.get(\"/census?name=\" +name)\n            .then((response) => response.data)\n            .then((data) => {\n                setIsLoaded(true);\n                setData(data);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n\n            );\n\n    \n    }, [name]) // the array is to tell useEffect function of any dependencies.\n    // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n    return (\n        <div>\n            {error &&\n                <div>Error: {error.message}</div>}\n            {!isLoaded ?\n                <div>Loading...</div> :\n                <ul className=\"list-group\">\n\n                    {data.map((s) => ((<li className=\"list-group-item\" key={s.city}>{s.city.replace('city', ',')}: population {s.census}</li>)))}\n                </ul>}\n\n\n\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}