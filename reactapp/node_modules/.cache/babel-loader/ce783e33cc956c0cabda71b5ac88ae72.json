{"ast":null,"code":"/*import { create } from 'apisauce'\n\nimport { useEffect } from \"react\";\n\nimport { useState } from \"react\";\n\nexport default function SauceFetch({ name }) {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(false);\n    \n    \n    useEffect(() => {\n        //baseURL is the api URL by itself\n        const api = create({\n            baseURL:\"http://localhost:8080/api\"\n\n        });\n        api.get(\"/census?name=\" +name)\n            .then((response) => response.data)\n            .then((data) => {\n                setIsLoaded(true);\n                setData(data);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n\n            );\n\n    \n    }, [name]) // the array is to tell useEffect function of any dependencies.\n    // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n    return (\n        <div>\n            {/!*{error &&\n                <div>Error: {error.message}</div>}\n            {!isLoaded ?\n                <div>Loading...</div> :\n                <ul className=\"list-group\">\n\n                    {data.map((s) => ((<li className=\"list-group-item\" key={s.city}>{s.city.replace('city', ',')}: population {s.census}</li>)))}\n                </ul>}*!/}\n\n\n\n        </div>\n    );\n}*/","map":{"version":3,"sources":["A:/WebstormProjects/MERN/reactapp/src/components/SauceFetch.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import { create } from 'apisauce'\n\nimport { useEffect } from \"react\";\n\nimport { useState } from \"react\";\n\nexport default function SauceFetch({ name }) {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(false);\n    \n    \n    useEffect(() => {\n        //baseURL is the api URL by itself\n        const api = create({\n            baseURL:\"http://localhost:8080/api\"\n\n        });\n        api.get(\"/census?name=\" +name)\n            .then((response) => response.data)\n            .then((data) => {\n                setIsLoaded(true);\n                setData(data);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n\n            );\n\n    \n    }, [name]) // the array is to tell useEffect function of any dependencies.\n    // if a dependency should change, it will re-render. In this case the array is empty: there are no dependencies.\n\n    return (\n        <div>\n            {/!*{error &&\n                <div>Error: {error.message}</div>}\n            {!isLoaded ?\n                <div>Loading...</div> :\n                <ul className=\"list-group\">\n\n                    {data.map((s) => ((<li className=\"list-group-item\" key={s.city}>{s.city.replace('city', ',')}: population {s.census}</li>)))}\n                </ul>}*!/}\n\n\n\n        </div>\n    );\n}*/"]},"metadata":{},"sourceType":"module"}